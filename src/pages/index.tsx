"use client";

//Import bootstrap
import "bootstrap/dist/css/bootstrap.min.css"; // Import Bootstrap CSS
import "../styles/Home.module.css"; // Import CSS

import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import React, { useEffect, useRef } from "react";
import mapboxgl from "mapbox-gl";
import "mapbox-gl/dist/mapbox-gl.css";

import GolbalVar from "../../src/js/global";

//Import component
import ListMap from "../../src/component/ListMap";
import Header from "../../src/component/Header";

export default function Home() {
  const mapContainerRef = useRef();
  const mapRef = useRef<mapboxgl.Map | null>(null);
  const [mapRaster, setMapRaster] = React.useState(
    "https://mt1.google.com/vt/lyrs=y&hl=vi&x={x}&y={y}&z={z}"
  );
  const [latLocation, setLatLocation] = React.useState(12.69396589054595);
  const [longLocation, setLongLocation] = React.useState(108.05858136776806);
  useEffect(() => {
    typeof document !== undefined
      ? require("bootstrap/dist/js/bootstrap.bundle.min.js")
      : null;
  }, []);
  useEffect(() => {
    mapboxgl.accessToken = GolbalVar.MAPBOX_TOKEN;
    mapRef.current = new mapboxgl.Map({
      container: "map",
      style: "mapbox://styles/mapbox/streets-v11", // style URL
      center: [longLocation, latLocation], // starting position [lng, lat]
      zoom: 9,
    });
    newMarker(longLocation, latLocation, mapRef.current);
    mapRef.current.setStyle({
      version: 8,
      sources: {
        "raster-tiles": {
          type: "raster",
          tiles: [mapRaster],
          tileSize: 256,
        },
      },
      layers: [
        {
          id: "simple-tiles",
          type: "raster",
          source: "raster-tiles",
          minzoom: 0,
          maxzoom: 22,
        },
      ],
    });

    // Get location user
    mapRef.current.addControl(
      new mapboxgl.GeolocateControl({
        positionOptions: {
          enableHighAccuracy: true,
        },
        trackUserLocation: true,
      })
    );

    // Listen for the `geolocate` event that the GeolocateControl fires.
  }, []);

  /* Function */
  const newMarker = async (lng: any, lat: any, map: any) => {
    // Create a new marker.
    const el = document.createElement("div");
    el.className = "marker";
    // /Users/congdt/AlphaGroup/ttland/ttland-next/src/images
    el.style.backgroundImage = "url('/images/mapbox-icon.png')";
    el.style.width = "2rem";
    el.style.height = "2rem";
    el.style.backgroundSize = "cover";
    // Add marker to map.
    await new mapboxgl.Marker(el).setLngLat([lng, lat]).addTo(map);
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div style={{ position: "relative", width: "100vw", height: "100vh" }}>
        <main id="map" style={{ width: "100%", height: "100%" }}></main>
        <div
          className="content"
          style={{ position: "absolute", top: 0, left: 0 }}
        >
          <Header />
          <ListMap />
        </div>
      </div>
    </>
  );
}
